parameters:
  secureFile: ''
  buildScript: ''
steps:
 # Download secure file from azure library
  # - task: DownloadSecureFile@1
  #   inputs:
  #     secureFile: ${{ parameters.secureFile }}

  # # Copy the .env file
  # - task: CopyFiles@2
  #   inputs:
  #     sourceFolder: '$(Agent.TempDirectory)'
  #     contents: '**/*${{ parameters.secureFile }}'
  #     targetFolder: './'
  #     cleanTargetFolder: false
  #bug fix for timeout per thread: https://developercommunity.visualstudio.com/solutions/1010356/view.html
  #here's the lookup from nodejs to npm: https://nodejs.org/en/download/releases/
  #we should be able to remove this once it's the new baseline
  - task: NodeTool@0
    displayName: 'use npm 6.14.5 as bug fix for timeouts'
    inputs:
      versionSpec: '>=16'
      #checkLatest: false # Optional

  # npm
  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: 'install' # Options: install, publish, custom
      workingDir: ./
      #verbose: # Optional
      #customCommand: # Required when command == Custom
      #customRegistry: useFeed
      #customFeed: $(feed)
      #customEndpoint: # Optional
      #publishRegistry: 'useExternalRegistry' # Optional. Options: useExternalRegistry, useFeed
      #publishFeed: # Required when publishRegistry == UseFeed
      #publishPackageMetadata: true # Optional
      #publishEndpoint: # Required when publishRegistry == UseExternalRegistry

  # Command Line
  # - script: '${{ parameters.buildScript }}'
  #   displayName: '${{ parameters.buildScript }}'
  #   workingDirectory: ./

  # Command Line
  # This is stopping the build when no test specified since 12/29/2021.
  # - script: |
  #     set CI=true
  #     npm test
  #   displayName: 'npm test'
  #   workingDirectory: $(buildPath)

  # Command Line
  - script: dir /s
  # workingDirectory: \

  # Copy Files
  # - task: CopyFiles@2
  #   displayName: 'Copy Files to Artifact Staging Directory'
  #   inputs:
  #     sourceFolder: '$(Build.SourcesDirectory)\$(buildPath)\assets' # Optional
  #     contents: '**'
  #     targetFolder: $(Build.ArtifactStagingDirectory)\$(app)
  #     #cleanTargetFolder: false # Optional
  #     #overWrite: false # Optional
  #     #flattenFolders: false # Optional

  # Copy Files
  - task: CopyFiles@2
    displayName: 'Copy Files to Artifact Staging Directory'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)' # Optional
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
      #cleanTargetFolder: false # Optional
      #overWrite: false # Optional
      #flattenFolders: false # Optional

  # # Publish pipeline artifact
  - publish: $(Build.ArtifactStagingDirectory)
    displayName: 'Publish pipeline artifact'
    artifact: '$(Build.SourceBranchName)-drop'
  # - task: ArchiveFiles@2
  #   displayName: 'Archive files'
  #   inputs:
  #     rootFolderOrFile: '$(Build.SourcesDirectory)/app'
  #     includeRootFolder: false
  #     archiveType: zip
  #     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  #     replaceExistingArchive: true

  # - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  #   displayName: 'Upload package'
  #   artifact: drop
